{
  "remainingRequest": "/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":false}],\"/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/docz-core/node_modules/@babel/preset-typescript/lib/index.js\"],\"plugins\":[\"/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx",
  "dependencies": [
    {
      "path": "/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx",
      "mtime": 1534455277768
    },
    {
      "path": "/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/cache-loader/dist/cjs.js",
      "mtime": 0
    },
    {
      "path": "/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1529635966000
    },
    {
      "path": "/Users/mdapper/Sites/bookself/bookself-webapp/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1534034887000
    }
  ],
  "contextDependencies": [],
  "result": [
    "var _jsxFileName = \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\";\n\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  border-radius: \", \";\\n  border: 1px solid \", \";\\n  color: \", \";\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 16px;\\n  font-weight: bold;\\n  height: 40px;\\n  margin: 0;\\n  min-width: 140px;\\n  padding: 0 16px;\\n  position: relative;\\n  opacity: \", \";\\n  cursor: \", \";\\n  transition: border-color \", \" ease,\\n    background-color \", \" ease,\\n    color \", \" ease;\\n  overflow: hidden;\\n\\n  &:hover {\\n    background-color: \", \";\\n    border-color: \", \";\\n  }\\n\\n  &:focus {\\n    background-color: \", \";\\n    border-color: \", \";\\n  }\\n\\n  &:active {\\n    background-color: \", \";\\n    border-color: \", \";\\n  }\\n\\n  &:before {\\n    content: '';\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    display: block;\\n    width: 0;\\n    padding-top: 0;\\n    border-radius: 100%;\\n    opacity: 0.3;\\n    background-color: \", \";\\n    transform: translate(-50%, -50%);\\n  }\\n\\n  &:focus:before,\\n  &:active:before {\\n    width: 120%;\\n    padding-top: 120%;\\n    transition: width 0.4s ease-out, padding-top 0.4s ease-out;\\n  }\\n\"]);\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport theme from 'styled-theming';\nimport { colors, misc } from '../../../components/tokens';\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      onClick = _ref.onClick,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'medium' : _ref$size;\n  return React.createElement(ButtonStyled, {\n    disabled: disabled,\n    type: type,\n    onClick: onClick,\n    color: color,\n    size: size,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label\",\n    \"data-testid\": \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, label));\n};\n\nvar backgroundColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blue,\n    light: colors.fill.blue\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red\n  }\n});\nvar hoverColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blueLight,\n    light: colors.fill.blueLight\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red\n  }\n});\nvar activeFocusColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blueDark,\n    light: colors.fill.blueDark\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red\n  }\n});\nvar textColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.white,\n    light: colors.fill.white\n  },\n  secondary: {\n    dark: colors.fill.white,\n    light: colors.fill.white\n  },\n  error: {\n    dark: colors.fill.white,\n    light: colors.fill.white\n  }\n});\nvar ButtonStyled = styled.button(_templateObject, backgroundColor, misc.radius, backgroundColor, textColor, function (props) {\n  return props.disabled ? 0.6 : 1;\n}, function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n}, misc.animationDuration.slow, misc.animationDuration.slow, misc.animationDuration.slow, hoverColor, hoverColor, backgroundColor, activeFocusColor, activeFocusColor, activeFocusColor, activeFocusColor);\nvar _default = Button;\nexport default _default;\n\ntry {\n  // @ts-ignore\n  Button.displayName = \"Button\"; // @ts-ignore\n\n  Button.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Button\",\n    \"props\": {\n      \"label\": {\n        \"defaultValue\": null,\n        \"description\": \"Set this to change the label\",\n        \"name\": \"label\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"color\": {\n        \"defaultValue\": null,\n        \"description\": \"The color of the button, defaults to 'primary'\",\n        \"name\": \"color\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"colorType\"\n        }\n      },\n      \"disabled\": {\n        \"defaultValue\": null,\n        \"description\": \"Disables the button, changing the visual style and make it unable to be pressed\",\n        \"name\": \"disabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"size\": {\n        \"defaultValue\": null,\n        \"description\": \"The size of the button, defaults to 'medium'\",\n        \"name\": \"size\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"sizeType\"\n        }\n      },\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"Type of the button, defaults to 'button'\",\n        \"name\": \"type\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"submit\\\" | \\\"button\\\"\"\n        }\n      },\n      \"loading\": {\n        \"defaultValue\": null,\n        \"description\": \"Loading state when waiting for an action to complete\",\n        \"name\": \"loading\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"onClick\": {\n        \"defaultValue\": null,\n        \"description\": \"Function to handle button click\",\n        \"name\": \"onClick\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(e: MouseEvent<HTMLElement>) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/atoms/Button/Button.tsx#Button\"] = {\n      docgenInfo: Button.__docgenInfo,\n      name: \"Button\",\n      path: \"src/components/atoms/Button/Button.tsx#Button\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(backgroundColor, \"backgroundColor\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(hoverColor, \"hoverColor\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(activeFocusColor, \"activeFocusColor\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(textColor, \"textColor\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(ButtonStyled, \"ButtonStyled\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/mdapper/Sites/bookself/bookself-webapp/src/components/atoms/Button/Button.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": ["src/components/atoms/Button/Button.tsx"],
      "names": [
        "React",
        "styled",
        "theme",
        "colors",
        "misc",
        "Button",
        "label",
        "disabled",
        "type",
        "loading",
        "onClick",
        "color",
        "size",
        "backgroundColor",
        "variants",
        "primary",
        "dark",
        "fill",
        "blue",
        "light",
        "secondary",
        "gray",
        "error",
        "red",
        "hoverColor",
        "blueLight",
        "activeFocusColor",
        "blueDark",
        "textColor",
        "white",
        "ButtonStyled",
        "button",
        "radius",
        "props",
        "animationDuration",
        "slow",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "name",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/mdapper/Sites/bookself/bookself-webapp",
      "sourcesContent": [
        "import * as React from 'react';\nimport styled from 'styled-components';\nimport theme from 'styled-theming';\n\nimport { colors, misc } from '../../../components/tokens';\n\ntype colorType = 'primary' | 'secondary' | 'error';\ntype sizeType = 'small' | 'medium' | 'large';\n\ninterface IProps {\n  /**\n   * Set this to change the label\n   */\n  label: string;\n\n  /** The color of the button, defaults to 'primary' */\n  color: colorType;\n\n  /** Disables the button, changing the visual style and make it unable to be pressed */\n  disabled?: boolean;\n\n  /** The size of the button, defaults to 'medium' */\n  size?: sizeType;\n\n  /** Type of the button, defaults to 'button' */\n  type?: 'submit' | 'button';\n\n  /** Loading state when waiting for an action to complete */\n  loading?: boolean;\n\n  /** Function to handle button click */\n  onClick?(e: React.MouseEvent<HTMLElement>): void;\n}\n\ninterface IStyledProps {\n  color: colorType;\n  size: sizeType;\n  loading: boolean;\n  disabled: boolean;\n}\n\nconst Button: React.SFC<IProps> = ({\n  label,\n  disabled = false,\n  type = 'button',\n  loading = false,\n  onClick,\n  color = 'primary',\n  size = 'medium',\n}) => (\n  <ButtonStyled\n    disabled={disabled}\n    type={type}\n    onClick={onClick}\n    color={color}\n    size={size}\n    loading={loading}\n  >\n    <span className=\"label\" data-testid=\"label\">\n      {label}\n    </span>\n  </ButtonStyled>\n);\n\nconst backgroundColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blue,\n    light: colors.fill.blue,\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray,\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red,\n  },\n});\n\nconst hoverColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blueLight,\n    light: colors.fill.blueLight,\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray,\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red,\n  },\n});\n\nconst activeFocusColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.blueDark,\n    light: colors.fill.blueDark,\n  },\n  secondary: {\n    dark: colors.fill.gray,\n    light: colors.fill.gray,\n  },\n  error: {\n    dark: colors.fill.red,\n    light: colors.fill.red,\n  },\n});\n\nconst textColor = theme.variants('mode', 'color', {\n  primary: {\n    dark: colors.fill.white,\n    light: colors.fill.white,\n  },\n  secondary: {\n    dark: colors.fill.white,\n    light: colors.fill.white,\n  },\n  error: {\n    dark: colors.fill.white,\n    light: colors.fill.white,\n  },\n});\n\nconst ButtonStyled = styled.button<IStyledProps>`\n  background-color: ${backgroundColor};\n  border-radius: ${misc.radius};\n  border: 1px solid ${backgroundColor};\n  color: ${textColor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: bold;\n  height: 40px;\n  margin: 0;\n  min-width: 140px;\n  padding: 0 16px;\n  position: relative;\n  opacity: ${(props: IStyledProps) => (props.disabled ? 0.6 : 1)};\n  cursor: ${(props: IStyledProps) =>\n    props.disabled ? 'not-allowed' : 'pointer'};\n  transition: border-color ${misc.animationDuration.slow} ease,\n    background-color ${misc.animationDuration.slow} ease,\n    color ${misc.animationDuration.slow} ease;\n  overflow: hidden;\n\n  &:hover {\n    background-color: ${hoverColor};\n    border-color: ${hoverColor};\n  }\n\n  &:focus {\n    background-color: ${backgroundColor};\n    border-color: ${activeFocusColor};\n  }\n\n  &:active {\n    background-color: ${activeFocusColor};\n    border-color: ${activeFocusColor};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    width: 0;\n    padding-top: 0;\n    border-radius: 100%;\n    opacity: 0.3;\n    background-color: ${activeFocusColor};\n    transform: translate(-50%, -50%);\n  }\n\n  &:focus:before,\n  &:active:before {\n    width: 120%;\n    padding-top: 120%;\n    transition: width 0.4s ease-out, padding-top 0.4s ease-out;\n  }\n`;\n\nexport default Button;\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"label\": { \"defaultValue\": null, \"description\": \"Set this to change the label\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"The color of the button, defaults to 'primary'\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"colorType\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"Disables the button, changing the visual style and make it unable to be pressed\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"The size of the button, defaults to 'medium'\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"sizeType\" } }, \"type\": { \"defaultValue\": null, \"description\": \"Type of the button, defaults to 'button'\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"\\\"submit\\\" | \\\"button\\\"\" } }, \"loading\": { \"defaultValue\": null, \"description\": \"Loading state when waiting for an action to complete\", \"name\": \"loading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"Function to handle button click\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"(e: MouseEvent<HTMLElement>) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/atoms/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/atoms/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
